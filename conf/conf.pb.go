// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VectorType int32

const (
	VectorType_BIAS  VectorType = 0
	VectorType_LEFT  VectorType = 1 // left = query
	VectorType_RIGHT VectorType = 2 // right = index
)

// Enum value maps for VectorType.
var (
	VectorType_name = map[int32]string{
		0: "BIAS",
		1: "LEFT",
		2: "RIGHT",
	}
	VectorType_value = map[string]int32{
		"BIAS":  0,
		"LEFT":  1,
		"RIGHT": 2,
	}
)

func (x VectorType) Enum() *VectorType {
	p := new(VectorType)
	*p = x
	return p
}

func (x VectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_conf_conf_proto_enumTypes[0].Descriptor()
}

func (VectorType) Type() protoreflect.EnumType {
	return &file_conf_conf_proto_enumTypes[0]
}

func (x VectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VectorType.Descriptor instead.
func (VectorType) EnumDescriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

type OptimConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L1       float32 `protobuf:"fixed32,1,opt,name=l1,proto3" json:"l1,omitempty"`
	L2       float32 `protobuf:"fixed32,2,opt,name=l2,proto3" json:"l2,omitempty"`
	Alpha    float32 `protobuf:"fixed32,3,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Beta     float32 `protobuf:"fixed32,4,opt,name=beta,proto3" json:"beta,omitempty"`
	EmbAlpha float32 `protobuf:"fixed32,5,opt,name=emb_alpha,json=embAlpha,proto3" json:"emb_alpha,omitempty"`
	EmbBeta  float32 `protobuf:"fixed32,6,opt,name=emb_beta,json=embBeta,proto3" json:"emb_beta,omitempty"`
	EmbL1    float32 `protobuf:"fixed32,7,opt,name=emb_l1,json=embL1,proto3" json:"emb_l1,omitempty"`
	EmbL2    float32 `protobuf:"fixed32,8,opt,name=emb_l2,json=embL2,proto3" json:"emb_l2,omitempty"`
	EmbSize  uint32  `protobuf:"varint,9,opt,name=emb_size,json=embSize,proto3" json:"emb_size,omitempty"`
}

func (x *OptimConfig) Reset() {
	*x = OptimConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimConfig) ProtoMessage() {}

func (x *OptimConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimConfig.ProtoReflect.Descriptor instead.
func (*OptimConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *OptimConfig) GetL1() float32 {
	if x != nil {
		return x.L1
	}
	return 0
}

func (x *OptimConfig) GetL2() float32 {
	if x != nil {
		return x.L2
	}
	return 0
}

func (x *OptimConfig) GetAlpha() float32 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *OptimConfig) GetBeta() float32 {
	if x != nil {
		return x.Beta
	}
	return 0
}

func (x *OptimConfig) GetEmbAlpha() float32 {
	if x != nil {
		return x.EmbAlpha
	}
	return 0
}

func (x *OptimConfig) GetEmbBeta() float32 {
	if x != nil {
		return x.EmbBeta
	}
	return 0
}

func (x *OptimConfig) GetEmbL1() float32 {
	if x != nil {
		return x.EmbL1
	}
	return 0
}

func (x *OptimConfig) GetEmbL2() float32 {
	if x != nil {
		return x.EmbL2
	}
	return 0
}

func (x *OptimConfig) GetEmbSize() uint32 {
	if x != nil {
		return x.EmbSize
	}
	return 0
}

type FeatureConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId  uint64     `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	Name    string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	VecType VectorType `protobuf:"varint,3,opt,name=vec_type,json=vecType,proto3,enum=conf.VectorType" json:"vec_type,omitempty"`
	Cross   int32      `protobuf:"varint,4,opt,name=cross,proto3" json:"cross,omitempty"`
}

func (x *FeatureConfig) Reset() {
	*x = FeatureConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureConfig) ProtoMessage() {}

func (x *FeatureConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureConfig.ProtoReflect.Descriptor instead.
func (*FeatureConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *FeatureConfig) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *FeatureConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureConfig) GetVecType() VectorType {
	if x != nil {
		return x.VecType
	}
	return VectorType_BIAS
}

func (x *FeatureConfig) GetCross() int32 {
	if x != nil {
		return x.Cross
	}
	return 0
}

type AllConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptimConfig     *OptimConfig     `protobuf:"bytes,1,opt,name=optim_config,json=optimConfig,proto3" json:"optim_config,omitempty"`
	FeatureList     []*FeatureConfig `protobuf:"bytes,2,rep,name=feature_list,json=featureList,proto3" json:"feature_list,omitempty"`
	IsFeatureSigned bool             `protobuf:"varint,3,opt,name=is_feature_signed,json=isFeatureSigned,proto3" json:"is_feature_signed,omitempty"`
	GroupSparse     bool             `protobuf:"varint,4,opt,name=group_sparse,json=groupSparse,proto3" json:"group_sparse,omitempty"`
	TrainList       []string         `protobuf:"bytes,5,rep,name=train_list,json=trainList,proto3" json:"train_list,omitempty"`
	PredictList     []string         `protobuf:"bytes,6,rep,name=predict_list,json=predictList,proto3" json:"predict_list,omitempty"`
}

func (x *AllConfig) Reset() {
	*x = AllConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllConfig) ProtoMessage() {}

func (x *AllConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllConfig.ProtoReflect.Descriptor instead.
func (*AllConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *AllConfig) GetOptimConfig() *OptimConfig {
	if x != nil {
		return x.OptimConfig
	}
	return nil
}

func (x *AllConfig) GetFeatureList() []*FeatureConfig {
	if x != nil {
		return x.FeatureList
	}
	return nil
}

func (x *AllConfig) GetIsFeatureSigned() bool {
	if x != nil {
		return x.IsFeatureSigned
	}
	return false
}

func (x *AllConfig) GetGroupSparse() bool {
	if x != nil {
		return x.GroupSparse
	}
	return false
}

func (x *AllConfig) GetTrainList() []string {
	if x != nil {
		return x.TrainList
	}
	return nil
}

func (x *AllConfig) GetPredictList() []string {
	if x != nil {
		return x.PredictList
	}
	return nil
}

var File_conf_conf_proto protoreflect.FileDescriptor

var file_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0xd8, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x6c, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x6c, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x65, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6d, 0x62, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6d, 0x62, 0x5f, 0x62, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x65, 0x6d, 0x62, 0x42, 0x65, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6d, 0x62,
	0x5f, 0x6c, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x4c, 0x31,
	0x12, 0x15, 0x0a, 0x06, 0x65, 0x6d, 0x62, 0x5f, 0x6c, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x65, 0x6d, 0x62, 0x4c, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6d, 0x62, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x7f, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x76, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x76, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x34, 0x0a, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x2a, 0x2b, 0x0a, 0x0a, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x49, 0x41, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData = file_conf_conf_proto_rawDesc
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_conf_proto_rawDescData)
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_conf_conf_proto_goTypes = []interface{}{
	(VectorType)(0),       // 0: conf.VectorType
	(*OptimConfig)(nil),   // 1: conf.OptimConfig
	(*FeatureConfig)(nil), // 2: conf.FeatureConfig
	(*AllConfig)(nil),     // 3: conf.AllConfig
}
var file_conf_conf_proto_depIdxs = []int32{
	0, // 0: conf.FeatureConfig.vec_type:type_name -> conf.VectorType
	1, // 1: conf.AllConfig.optim_config:type_name -> conf.OptimConfig
	2, // 2: conf.AllConfig.feature_list:type_name -> conf.FeatureConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_conf_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		EnumInfos:         file_conf_conf_proto_enumTypes,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_rawDesc = nil
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
